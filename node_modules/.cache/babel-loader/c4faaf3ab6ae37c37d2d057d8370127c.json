{"ast":null,"code":"/**\n * 拦截器\n * @file interceptors.js\n * @author \n * @copyright \n * @createDate 2021-01-23\n */\nimport axios from \"axios\"; // Add a response interceptor\n\naxios.interceptors.response.use(function (response) {\n  if (response.data.code === \"100\" && response.data.message === \"failed\") {\n    throw new Error(\"用户名或密码不正确！\");\n  } else if (response.data.code === \"103\" && response.data.data === \"Empty username\" && response.data.message === \"value invalid\") {\n    throw new Error(\"用户名不能为空！\");\n  } else if (response.data.code === \"103\" && response.data.data === \"Empty password\" && response.data.message === \"value invalid\") {\n    throw new Error(\"密码不能为空！\");\n  } // switch(response.data.code){\n  //     case \"100\":\n  //         console.log(\"code: 100\");\n  //         if(response.data.data === null && response.data.message === \"failed\"){\n  //             throw new Error(\"用户名或密码不正确！\");\n  //         }\n  //         break;\n  //     case \"103\":\n  //         console.log(\"code: 103\");\n  //         if(response.data.data === \"Empty username\" && response.data.message === \"value invalid\"){\n  //             throw new Error(\"用户名不能为空！\");\n  //         }else if(response.data.data === \"Empty password\" && response.data.message === \"value invalid\"){\n  //             throw new Error(\"密码不能为空！\");\n  //         }\n  //         break;\n  //     default:\n  //         console.log(\"default\");\n  //         break;\n  // }\n\n\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["/Users/chenyi/Git/SEED/SeedCup/src/interceptors.js"],"names":["axios","interceptors","response","use","data","code","message","Error","error","Promise","reject"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACAA,KAAK,CAACC,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAAUD,QAAV,EAAoB;AAChD,MAAGA,QAAQ,CAACE,IAAT,CAAcC,IAAd,KAAuB,KAAvB,IAAgCH,QAAQ,CAACE,IAAT,CAAcE,OAAd,KAA0B,QAA7D,EAAsE;AAClE,UAAM,IAAIC,KAAJ,CAAU,YAAV,CAAN;AACH,GAFD,MAEM,IAAGL,QAAQ,CAACE,IAAT,CAAcC,IAAd,KAAuB,KAAvB,IAAgCH,QAAQ,CAACE,IAAT,CAAcA,IAAd,KAAuB,gBAAvD,IAA2EF,QAAQ,CAACE,IAAT,CAAcE,OAAd,KAA0B,eAAxG,EAAwH;AAC1H,UAAM,IAAIC,KAAJ,CAAU,UAAV,CAAN;AACH,GAFK,MAEA,IAAGL,QAAQ,CAACE,IAAT,CAAcC,IAAd,KAAuB,KAAvB,IAAgCH,QAAQ,CAACE,IAAT,CAAcA,IAAd,KAAuB,gBAAvD,IAA2EF,QAAQ,CAACE,IAAT,CAAcE,OAAd,KAA0B,eAAxG,EAAwH;AAC1H,UAAM,IAAIC,KAAJ,CAAU,SAAV,CAAN;AACH,GAP+C,CAQhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAOL,QAAP;AACH,CA5BD,EA4BG,UAAUM,KAAV,EAAiB;AAChB,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CA9BD","sourcesContent":["/**\n * 拦截器\n * @file interceptors.js\n * @author \n * @copyright \n * @createDate 2021-01-23\n */\n\nimport axios from \"axios\"\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    if(response.data.code === \"100\" && response.data.message === \"failed\"){\n        throw new Error(\"用户名或密码不正确！\");\n    }else if(response.data.code === \"103\" && response.data.data === \"Empty username\" && response.data.message === \"value invalid\"){\n        throw new Error(\"用户名不能为空！\");\n    }else if(response.data.code === \"103\" && response.data.data === \"Empty password\" && response.data.message === \"value invalid\"){\n        throw new Error(\"密码不能为空！\");\n    }\n    // switch(response.data.code){\n    //     case \"100\":\n    //         console.log(\"code: 100\");\n    //         if(response.data.data === null && response.data.message === \"failed\"){\n    //             throw new Error(\"用户名或密码不正确！\");\n    //         }\n    //         break;\n    //     case \"103\":\n    //         console.log(\"code: 103\");\n    //         if(response.data.data === \"Empty username\" && response.data.message === \"value invalid\"){\n    //             throw new Error(\"用户名不能为空！\");\n    //         }else if(response.data.data === \"Empty password\" && response.data.message === \"value invalid\"){\n    //             throw new Error(\"密码不能为空！\");\n    //         }\n    //         break;\n    //     default:\n    //         console.log(\"default\");\n    //         break;\n    // }\n    return response;\n}, function (error) {\n    return Promise.reject(error);\n});"]},"metadata":{},"sourceType":"module"}