[{"/Users/chenyi/Git/SEED/SeedCup/src/index.js":"1","/Users/chenyi/Git/SEED/SeedCup/src/App.jsx":"2","/Users/chenyi/Git/SEED/SeedCup/src/router/router.js":"3","/Users/chenyi/Git/SEED/SeedCup/src/pages/signup/signup.js":"4","/Users/chenyi/Git/SEED/SeedCup/src/pages/seed/seed.js":"5","/Users/chenyi/Git/SEED/SeedCup/src/pages/signin/signin.js":"6","/Users/chenyi/Git/SEED/SeedCup/src/component/Table.js":"7","/Users/chenyi/Git/SEED/SeedCup/src/misc/utils.js":"8","/Users/chenyi/Git/SEED/SeedCup/src/component/Tab.js":"9","/Users/chenyi/Git/SEED/SeedCup/src/misc/interface.js":"10","/Users/chenyi/Git/SEED/SeedCup/src/misc/config.js":"11"},{"size":197,"mtime":1611490522122,"results":"12","hashOfConfig":"13"},{"size":763,"mtime":1611729230972,"results":"14","hashOfConfig":"13"},{"size":1193,"mtime":1611732883410,"results":"15","hashOfConfig":"13"},{"size":14667,"mtime":1612265778503,"results":"16","hashOfConfig":"13"},{"size":12972,"mtime":1612359537591,"results":"17","hashOfConfig":"13"},{"size":3087,"mtime":1612265295201,"results":"18","hashOfConfig":"13"},{"size":1627,"mtime":1612357635753,"results":"19","hashOfConfig":"13"},{"size":633,"mtime":1611497153924,"results":"20","hashOfConfig":"13"},{"size":5289,"mtime":1612071096195,"results":"21","hashOfConfig":"13"},{"size":3546,"mtime":1612357633816,"results":"22","hashOfConfig":"13"},{"size":703,"mtime":1612269369724,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"cy2laz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/chenyi/Git/SEED/SeedCup/src/index.js",[],["53","54"],"/Users/chenyi/Git/SEED/SeedCup/src/App.jsx",["55","56"],"// import { render } from \"@testing-library/react\";\n// import React, { useState } from \"react\";\nimport Rt from \"../src/router/router\"\nimport { Link } from 'react-router-dom'\nimport TabComponent from \"../src/component/Tab\"\n\n\nfunction App() {\n  \n    return(\n      <>\n        <Rt />\n      </>\n    )\n}\n\nexport default App;\n\n  // const [value, setValue] = useState(0)\n  // const [str, setStr] = useState(\"\")\n\n  // function handleChange(e) {\n  //     setValue(value + 1)\n  // }\n\n    \n  // function handleInput(e) {\n  //     setStr(e.target.value)\n  // }\n\n  // return (\n  //   <>\n  //     <h1>APP PAge</h1>\n  //     <div>{value}-{str}</div>\n  //     <button onClick={handleChange}>+1</button>\n  //     <input value={str} onInput={handleInput}></input>\n  //   </>\n  // );","/Users/chenyi/Git/SEED/SeedCup/src/router/router.js",["57","58"],"/**\n * 页面跳转\n * @file router.js\n * @author \n * @copyright \n * @createDate 2020-12-15\n */\n\nimport React from 'react'\n// import { render , Button} from 'react-dom'\nimport { Router, Route, Link  } from 'react-router-dom'\nimport { createHashHistory } from 'history';\nimport Seed from '../pages/seed/seed'\nimport SignIn from '../pages/signin/signin'\nimport SignUp from '../pages/signup/signup'\nimport App from \"../App\"\n\nconst hashHistory = createHashHistory();\n\nclass Rt extends React.Component{\n    render() {\n        return(\n            <> \n                {/* <button onClick={() => {this.props.history.push(\"/index\")}}>\n                    seedcup //为什么说push()是undefined?\n                </button> */}\n                \n                <Router history={hashHistory}>\n                    <Route path=\"/index\" component={Seed}/>\n                    <Route path=\"/signin\" component={SignIn}/>\n                    <Route path=\"/signup\" component={SignUp}/>\n                    {/* <Route path=\"/\" component={App}/> */}\n                    {/* <Route path=\"/download_doc\" component={Download_btn}/> */}\n\n                </Router>\n            </>\n        )\n    }\n}\nexport default Rt;\n","/Users/chenyi/Git/SEED/SeedCup/src/pages/signup/signup.js",["59","60","61"],"/**\n * 注册界面\n * @file signup.js\n * @author \n * @copyright \n * @createDate 2020-12-15\n */\n\nimport React, { useState } from 'react'\n// import { Link } from 'react-router-dom'\nimport \"../signup/signup.css\"\nimport \"../../materialize.css\"\nimport axios from 'axios'\nimport {API} from \"../../misc/interface\"\nimport checkPhone from \"../../misc/utils\"\n\n// import Qs from 'qs'\n        // this.getCaptcha = this.getCaptcha.bind(this);\n        // ,{\n        //     paramsSerializer: function(params) {\n        //         return Qs.stringify(params, {indices: false})\n        //     },\n        // }\nconst base = 'http://www.holdice.club:8087';\n\n// 此处的封装就交给萌宝了\n\n\n// function SignUp() {\n//   const[user, setUser] = useState(\"\");\n//   const[psw, setPsw] = useState(\"\");\n//   const[school, setSchool] = useState(\"\");\n//   const[college, setCollege] = useState(\"\");\n//   const[className, setClass] = useState(\"\");\n//   const[phone, setPhone] = useState(\"\");\n//   const[captcha, setCaptcha] = useState(\"\");\n//   const[email, setEmail] = useState(\"\");\n//   const[rePsw, setRePsw] = useState(\"\");\n\n//   /**\n//      * 手机号是否合法 + value是否为`string`\n//      * 如果不合法，需要alert提示（或者在页面上显示，这样更友好，但是我不会），并清空输入框\n//      * 同一手机号90s内不能重复\n//      * ToDo：获取验证码之后那个按钮变成 灰色的 90秒倒计时 不能按\n//      */\n//     function getCaptcha() {\n//       // console.log('phone: '+this.state.phone);\n//       if(checkPhone(this.state.phone) !== 1 ){\n//           alert(\"请输入正确的手机号!\");\n//           setPhone(\"\");\n//           return;\n//       }\n\n//       axios.get('/api/sms/send_captcha', {\n//           params:{\n//               phoneNumber: this.state.phone\n//           }\n//       })\n//       .then(function (response) {\n//           // handle success\n//           console.log(response);\n//         })\n//         .catch(function (error) {\n//           // handle error\n//           console.log(error);\n//         })\n\n//   }\n\n\n//   function chufa(e) {\n    \n//   }\n\n//   /**\n//    * 封装handleXXXInput()\n//    * @param {object} func  函数指针，例如setUser\n//    * @param {string} value 输入值\n//    */\n//   function handleInput(func, value) {\n//     func(value);\n//     console.log(value);\n//   }\n  \n//   return(\n//     <div className=\"content\">\n\n//       <div className=\"head\">        \n//         <h style={{fontSize: \"35px\"}}>微派·种子杯 </h>\n//         <font  style={{fontSize:\"35px\", color:\"rgb(50,187,255)\"}}>|</font>\n//         <small style={{fontSize: \"20px\"}}>软件编程PK赛报名表</small>\n//       </div>\n\n//       <br /><br/><br/>\n//       <br/><br/><br/>\n\n//       {/*method=\"post\" action={base + '/api/user/sign_up'} name=\"register\" encType=\"application/json\" target=\"/index\"*/}\n//       <form > \n//         <div className=\"captain\">\n//             <div className= \"groupinfo\" style={{height:\"65px\"}}>参赛者信息</div>\n//             <br />\n//             <br />\n//             <label>姓名</label>\n//             <br />\n//             <input type=\"text\" placeholder=\"\" onInput={handleInput(setUser, this.value)}></input>\n//             <br />\n//             <br />\n//             <label>学校</label>\n//             <br />\n//             <input type=\"text\" placeholder=\"\" onInput={handleInput(setSchool, this.value)}></input>\n//             <br />\n//             <br />\n//             <label>所在院系</label>\n//             <br />\n//             <input type=\"text\" placeholder=\"\" onInput={handleInput(setCollege, this.value)}></input>\n//             <br />\n//             <br />\n//             <label>专业班级</label>\n//             <br />\n//             <input type=\"text\" placeholder=\"\" onInput={handleInput(setClass, this.value)}></input>\n//             <br />\n//             <br />\n//             <div style={{display:\"flex\"}}>\n//                 <div style={{flex:\"1\"}}>\n//                     <label>移动电话</label>\n//                     <br />\n//                     <input type=\"text\" placeholder=\"\" className=\"phone\" onInput={handleInput(setPhone, this.value)} value={phone}></input>\n//                     <span className=\"phoneinfo\">phone number is wrong</span>\n//                 </div>\n//                 <button className=\"inputafterinfo\" id=\"vcodeget\" type=\"button\" onClick={getCaptcha}>获取验证码</button>\n//             </div>\n//             <br />\n//             <label>验证码</label>\n//             <br />\n//             <input type=\"text\" placeholder=\"\" onInput={handleInput(setCaptcha, this.value)}></input>\n//             <br />\n//             <br />\n//             <label >Email</label>\n//             <br />\n//             <input type=\"text\" placeholder=\"\" className=\"email\" onInput={handleInput(setEmail, this.value)}></input>\n//             <span className=\"emailinfo\">email is wrong</span>\n//             <br />\n//             <br />\n//             <label>密码</label>\n//             <br />\n//             <input type=\"password\" placeholder=\"\" id=\"password\" onInput={handleInput(setPsw, this.value)}></input>\n//             <br />\n//             <br />\n//             <label>确认密码</label>\n//             <br />\n//             <input type=\"password\" placeholder=\"\" id=\"confpassword\" onInput={handleInput(setRePsw, this.value)}></input>\n//             <small color=\"red\" style={{display:\"none\"}} id=\"gg\">*两次密码输入要一样哦 (´・ω・`)  </small>\n//         </div>\n\n//         <div className=\"allmem\">\n            \n        \n//         </div>             \n//         <br /><br /><br />\n        \n//         <br /><br /><br />\n\n//         {/*用form表单post的时候才用这个button*/}\n//         {/* <button type=\"submit\" style={{position:\"inherit\"}} className=\"inputafterinfo\">\n//             提交\n//         </button>   */}\n\n//         <button className=\"submitinfo\">\n//             确认提交\n//         </button>\n//       </form>\n\n//     </div>\n//   )\n// }\n\n\nclass SignUp extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: \"\",\n            psw: \"\", // 密码\n            school: \"\",\n            college: \"\", // 学院\n            class: \"\", // 班级\n            phone: \"\",\n            captcha: \"\", // 验证码\n            email: \"\"\n        };\n\n        this.handleUsrnameInput = this.handleUsrnameInput.bind(this);\n        this.handleSchoolInput = this.handleSchoolInput.bind(this);\n        this.handleCollegeInput = this.handleClassInput.bind(this);\n        this.handleClassInput = this.handleClassInput.bind(this);\n        this.handlePhoneInput = this.handlePhoneInput.bind(this); \n        this.handleCaptchaInput = this.handleCaptchaInput.bind(this);\n        this.handleEmailInput = this.handleEmailInput.bind(this);\n        this.handlePswInput = this.handlePswInput.bind(this);\n    }\n    \n    /**\n     * 手机号是否合法 + value是否为`string`\n     * 如果不合法，需要alert提示（或者在页面上显示，这样更友好，但是我不会），并清空输入框\n     * 同一手机号90s内不能重复\n     * ToDo：获取验证码之后那个按钮变成 灰色的 90秒倒计时 不能按\n     */\n     getCaptcha = async () => {\n        // console.log('phone: '+this.state.phone);\n        if(this.checkPhone(this.state.phone) !== 1 ){\n            alert(\"请输入正确的手机号!\");\n            this.setState({\n                phone: \"\"\n            });\n            return;\n        }\n\n        try {\n          const r = await API.getCaptcha({phoneNumber: this.state.phone});\n        } catch (error) {\n          console.log(error);\n          alert(error);\n        }\n        \n        // axios.get(base + '/api/sms/send_captcha', {\n        //     params:{\n        //         phoneNumber: this.state.phone\n        //     }\n        // })\n        // .then(function (response) {\n        //     // handle success\n        //     console.log(response);\n        //   })\n        //   .catch(function (error) {\n        //     // handle error\n        //     console.log(error);\n        //   })\n\n    }\n\n    \n\n    /**\n     * 1. 验证码是否正确\n     * 2. 是否有重复字段\n     * 3. comfirm密码是否一致\n     * 4. \n     */\n    handleSubmit = () => {\n        axios.post(\n            base + '/api/user/sign_up',\n            this.state, {\n                headers: \"application/json\"\n            }\n        )\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    handleInput(stateName, value) {\n      this.setState({\n        stateName: value\n      })\n    }\n\n    handleUsrnameInput(e) {\n        this.setState({\n            user: e.target.value\n        })\n        // console.log(this.state);\n    }\n\n    handleSchoolInput(e) {\n        this.setState({\n            school: e.target.value\n        })\n    }\n\n    handleCollegeInput(e) {\n        this.setState({\n            college: e.target.value\n        })\n    }\n\n    handleClassInput(e) {\n            this.setState({\n                class: e.target.value\n            })\n    }\n\n    handlePhoneInput(e) {\n        this.setState({\n            phone: e.target.value\n        });\n        // console.log(this.state.phone);\n    }\n\n    handleCaptchaInput(e) {\n        this.setState({\n            captcha: e.target.value\n        })\n    }\n\n    handleEmailInput(e) {\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n    handlePswInput(e) {\n        this.setState({\n            psw: e.target.value\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"content\" style={{backgroundColor:\"rgb(50, 54, 61)\"}}>\n                <div className=\"head\">        \n                <h style={{fontSize: \"35px\"}}>微派·种子杯 </h>\n                <font  style={{fontSize:\"35px\", color:\"rgb(50,187,255)\"}}>|</font>\n                <small style={{fontSize: \"20px\"}}>软件编程PK赛报名表</small>\n\n                    </div>\n                    <br /><br/><br/>\n                    <br/><br/><br/>\n                        {/**method=\"post\" action='/api/user/sign_up' name=\"register\" encType=\"application/json\" target=\"/index\" */}\n                        <form style={{marginLeft:\"30%\", marginRight:\"30%\"}}> \n                            <div className=\"captain\">\n                                <div className= \"groupinfo\" style={{height:\"65px\"}}>参赛者信息</div>\n                                <br />\n                                <br />\n                                <label>姓名</label>\n                                <br />\n                                <input type=\"text\" placeholder=\"\" onInput={this.handleUsrnameInput}></input>\n                                <br />\n                                <br />\n                                <label>学校</label>\n                                <br />\n                                <input type=\"text\" placeholder=\"\" onInput={this.handleSchoolInput}></input>\n                                <br />\n                                <br />\n                                <label>所在院系</label>\n                                <br />\n                                <input type=\"text\" placeholder=\"\" onInput={this.handleCollegeInput}></input>\n                                <br />\n                                <br />\n                                <label>专业班级</label>\n                                <br />\n                                <input type=\"text\" placeholder=\"\" onInput={this.handleClassInput}></input>\n                                <br />\n                                <br />\n                                <div style={{display:\"flex\"}}>\n                                    <div style={{flex:\"1\"}}>\n                                        <label>移动电话</label>\n                                        <br />\n                                        <input type=\"text\" placeholder=\"\" className=\"phone\" onInput={this.handlePhoneInput} value={this.state.phone}></input>\n                                        <span className=\"phoneinfo\">phone number is wrong</span>\n                                    </div>\n                                    <button className=\"inputafterinfo\" id=\"vcodeget\" type=\"button\" onClick={this.getCaptcha}>获取验证码</button>\n                                </div>\n                                <br />\n                                <label>验证码</label>\n                                <br />\n                                <input type=\"text\" placeholder=\"\" onInput={this.handleCaptchaInput}></input>\n                                <br />\n                                <br />\n                                <label >Email</label>\n                                <br />\n                                <input type=\"text\" placeholder=\"\" className=\"email\" onInput={this.handleEmailInput}></input>\n                                <span className=\"emailinfo\">email is wrong</span>\n                                <br />\n                                <br />\n                                <label>密码</label>\n                                <br />\n                                <input type=\"password\" placeholder=\"\" id=\"password\" onInput={this.handlePswInput}></input>\n                                <br />\n                                <br />\n                                <label>确认密码</label>\n                                <br />\n                                <input type=\"password\" placeholder=\"\" id=\"confpassword\"></input>\n                                <small color=\"red\" style={{display:\"none\"}} id=\"gg\">*两次密码输入要一样哦 (´・ω・`)  </small>\n                            </div>\n\n                            <div className=\"allmem\">\n                                \n                            \n                            </div>             \n                            <br /><br /><br />\n                            \n                            <br /><br /><br />\n\n                            {/*用form表单post的时候,用这个button*/}\n                            {/* <button type=\"submit\" style={{position:\"inherit\"}} className=\"inputafterinfo\">\n                                提交\n                            </button>   */}\n\n                            <button className=\"submitinfo\" onClick={this.handleSubmit}>\n                                确认提交\n                            </button>\n                        </form>\n                                \n\n            </div>\n        )\n    }\n}\n\nexport default SignUp;","/Users/chenyi/Git/SEED/SeedCup/src/pages/seed/seed.js",["62","63"],"/Users/chenyi/Git/SEED/SeedCup/src/pages/signin/signin.js",["64"],"/**\r\n * 登陆界面\r\n * @file signin.js\r\n * @author \r\n * @copyright \r\n * @createDate 2020-12-15\r\n */\r\n\r\nimport { useState } from 'react'\r\nimport \"../signin/signin.css\"\r\nimport \"../../materialize.css\"\r\nimport signin from \"../../img/signin.png\"\r\nimport axios from \"axios\"\r\nimport \"../../misc/interface\"\r\nimport { API } from '../../misc/interface'\r\n\r\naxios.defaults.baseURL = 'http://www.holdice.club:8087';\r\naxios.defaults.timeout = 5000;\r\n\r\nfunction SignIn() {\r\n\r\n    const [usr, setUsr] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n\r\n    function handleUsrInput(e) {\r\n        setUsr(e.target.value)\r\n    }\r\n\r\n    function handlePassInput(e) {\r\n        setPass(e.target.value)\r\n    }\r\n\r\n    async function logIn() {\r\n      // 拦截器在interface.js\r\n      try {\r\n        const r = await API.SignIn({username: usr, password: pass});\r\n        alert(\"登陆成功！\");\r\n      } catch (error) {\r\n        console.log(error);\r\n        alert(error);\r\n      }\r\n      \r\n    //   axios.post('/api/user/log_in', {\r\n    //       username: usr,\r\n    //       password: pass\r\n    //   },{\r\n    //       headers: {\r\n    //           'Content-Type': 'application/json'\r\n    //       }\r\n    //   })\r\n    //   .then(function (response) {\r\n    //       // console.log(response);\r\n    //       alert(\"登陆成功！\");\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //       // console.log(error);\r\n    //       alert(error);\r\n    //   });\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n      <div className=\"maintain\">\r\n        <div className=\"pdleft\">\r\n          <div className=\"login\">\r\n            <font style={{fontSize: \"18px\"}}>微派·种子杯</font>\r\n            <font  style={{fontSize: \"18px\", color:\"rgb(50,187,255)\"}}>|</font>\r\n            <small style={{fontSize: \"12px\"}}>软件编程PK赛</small>\r\n              \r\n            <br /><br /><br />\r\n\r\n            <font style={{color:\"white\", fontSize: \"2.5em\"}}>登录</font>\r\n\r\n            <br /><br />\r\n            <form>\r\n              <label>用户名</label>\r\n              <br />\r\n              <input onInput={handleUsrInput} type=\"text\" placeholder=\"请用手机号或邮箱登录\" style={{width:\"50%\"}}></input>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <label>密码</label>\r\n              <br />\r\n              <input onInput={handlePassInput} type=\"password\" style={{width:\"50%\"}}></input>\r\n              <br />\r\n              <span style={{position:\"relative\", left: \"48%\"}}><a href=\"/#/signup\" style={{color:\"white\", textDecoration:\"none\"}}>sign up</a></span>\r\n            </form>\r\n\r\n            <br />\r\n            <br />\r\n        \r\n            <button type=\"button\" className=\"submitinfo\" style={{position:\"absolute\", left:\"10px\"}} onClick={logIn}>\r\n              登录\r\n            </button>\r\n          </div>\r\n            \r\n        </div>\r\n        <div className=\"pdright\"style={{ position:\"absolute\", top:\"0\"}}>\r\n          <img className=\"picinfo\" src={signin} alt=\"picinfo\" style={{position:\"relative\"}} />\r\n        </div>\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default SignIn;","/Users/chenyi/Git/SEED/SeedCup/src/component/Table.js",["65","66"],"/Users/chenyi/Git/SEED/SeedCup/src/misc/utils.js",["67"],"/**\n * utils\n * @file utils.js\n * @author \n * @copyright \n * @createDate 2020-12-15\n */\n\n\n /* 验证手机号 */\n function checkPhone(value) {\n  // var regex = /^((\\+)?86|((\\+)?86)?)0?1[3458]\\d{9}$/; \n  var regex = /^1[3458]\\d{9}$/; \n  if (value) {\n      // react使用正则表达式变量的test方法进行校验\n      // 直接使用value.match(regex)显示match未定义\n      if (regex.test(value)) { \n          // callback();\n          return 1;\n      } else { \n          // callback('请输入正确的手机号码！');\n          return 0;\n      }\n  } else {\n      // 这里的callback函数会报错\n      return 100;\n  }\n}","/Users/chenyi/Git/SEED/SeedCup/src/component/Tab.js",["68","69"],"/**\n * tab切换(函数&类)组件\n * @file Tab.js\n * @author cy\n * @copyright \n * @createDate 2021-01-26\n */\n\nimport { useState } from 'react'\nimport \"../pages/seed/seed.css\"\nimport \"../materialize.css\"\n\n\nfunction TabsControl(children){\n  const[currentIndex, setIndex] = useState(0);\n\n  function check_tittle_index(index) {\n    return index === currentIndex ? \"Tab_tittle active\" : \"Tab_tittle\";\n  }\n\n  function check_item_display(index){\n    return index===currentIndex ? \"block\" : \"none\";\n  }\n\n  return(\n    <div >\n      {/**动态生成Tab导航 */}\n      {/* check_tittle_index(index) */}\n      <div className=\"tabs\">\n        {\n          children.map( (element, index) => {\n            return(\n              <button onClick={ () => { setIndex(index)} } className=\"tab col s2 taber\" style={{color:\"black\"}}>\n                {element.props.name}\n              </button>\n            );\n          })\n        }\n      </div>\n      {/*Tab内容区域*/}\n      <div className=\"Tab_item_wrap\">\n        {\n          children.map( (element, index) => {\n            return(\n              <div style={{display: check_item_display(index)}}>\n                { element }\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nfunction TabComponent() {\n  return(\n    // 使用对象的方法也可以\n    // TabsControl([{\n    //   name: \"社会\",\n    //   content: \"社会新闻内容sssssss\"\n    // }, {\n    //   name: \"体育\",\n    //   content: \"体育新闻的内容\"\n    // }, {\n    //   name: \"娱乐\",\n    //   content: \"娱乐圈新闻的内容\"\n    // }\n    // ])\n    TabsControl([\n    <div name=\"社会新闻\">\n          社会新闻的内容\n    </div>,\n    <div name=\"体育世界\">\n        体育世界的内容\n    </div>,\n    <div name=\"娱乐圈\">\n        娱乐圈的内容\n    </div>])\n  )\n}\n\nexport default TabsControl;\n\n\n/*     下面是使用class组件时的用法      */\n\n// class TabsControl extends React.Component{\n\n//     constructor(){\n//         super();\n//         this.state={ \n//             currentIndex : 0\n//         };\n//     }\n\n//     check_tittle_index(index){\n//         return index===this.state.currentIndex ? \"Tab_tittle active\" : \"Tab_tittle\";\n//     }\n\n//     //由于这个.css没有，所以就不用className来实现内容的显示与否了\n//     // check_item_index(index){\n//     //     return index===this.state.currentIndex ? \"Tab_item show\" : \"Tab_item\";\n//     // }\n\n//     check_item_display(index){\n//       return index===this.state.currentIndex ? \"block\" : \"none\";\n//     }\n\n//     render(){\n//         let _this=this;\n//         return(\n//             <div>\n//                 {/*动态生成Tab导航*/}\n//                 <div className=\"Tab_tittle_wrap\">\n//                     { React.Children.map( this.props.children , (element,index) => {\n//                         return(\n//                             /*箭头函数没有自己的this，这里的this继承自外围作用域，即组件本身*/\n//                             <button onClick={ () => { this.setState({currentIndex : index}) } } className={ this.check_tittle_index(index) }>\n//                               { element.props.name }\n//                             </button>\n//                             );\n//                     }) }\n//                 </div>\n//                 {/*Tab内容区域*/}\n//                 <div className=\"Tab_item_wrap\">\n//                     {React.Children.map(this.props.children,(element,index)=>{\n//                         return(\n//                             <div style={{display:this.check_item_display(index)}}>\n//                               { element }\n//                             </div>\n//                             );\n//                     })}\n//                 </div>\n//             </div>\n//             );\n//     }\n// }\n\n// class TabComponent extends React.Component{\n\n//     render(){\n//         return(\n//             <div className=\"container\">\n//                 <TabsControl>\n//                     <div name=\"社会新闻\">\n//                         社会新闻的内容\n//                     </div>\n//                     <div name=\"体育世界\">\n//                         体育世界的内容\n//                     </div>\n//                     <div name=\"娱乐圈\">\n//                         娱乐圈的内容\n//                     </div>\n//                 </TabsControl>\n//             </div>\n//             );\n//     }\n// }\n\n\n\n\n/**首先我们定义了一个子组件叫TabsControl ，然后我们遍历它的子标签。子标签的内容从哪里来呢，是在该组件里面的name值那里获取。\n\n　　this.props.children 是React内建的一个属性，用来获取组件的子元素。因为子元素有可能是Object或者Array，\n\n所以React提供了一些处理children的辅助方法用来遍历：React.Children.map。\n\n　　比如上面这段代码中，this.props.children获取了里面三个div的数组，但是假如你只要一个div呢，那么获取的就是对象。所以需要\n\nReact.Children.map（）来配合进行遍历。\n\n　　通过上面的这段代码，我们就很方便的进行遍历了。比如一个页面需要有多个tab切换，那么我们只需要引入这个TabsControl 一次就可以了。\n*/","/Users/chenyi/Git/SEED/SeedCup/src/misc/interface.js",["70"],"/Users/chenyi/Git/SEED/SeedCup/src/misc/config.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":11,"column":25,"nodeType":"77","messageId":"78","endLine":11,"endColumn":29},{"ruleId":"75","severity":1,"message":"80","line":16,"column":8,"nodeType":"77","messageId":"78","endLine":16,"endColumn":11},{"ruleId":"75","severity":1,"message":"81","line":9,"column":17,"nodeType":"77","messageId":"78","endLine":9,"endColumn":25},{"ruleId":"75","severity":1,"message":"82","line":15,"column":8,"nodeType":"77","messageId":"78","endLine":15,"endColumn":18},{"ruleId":"75","severity":1,"message":"83","line":219,"column":17,"nodeType":"77","messageId":"78","endLine":219,"endColumn":18},{"ruleId":"75","severity":1,"message":"84","line":17,"column":8,"nodeType":"77","messageId":"78","endLine":17,"endColumn":13},{"ruleId":"75","severity":1,"message":"85","line":22,"column":7,"nodeType":"77","messageId":"78","endLine":22,"endColumn":11},{"ruleId":"75","severity":1,"message":"83","line":36,"column":15,"nodeType":"77","messageId":"78","endLine":36,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":10,"column":3,"nodeType":"88","messageId":"89","endLine":10,"endColumn":45},{"ruleId":"86","severity":1,"message":"87","line":11,"column":3,"nodeType":"88","messageId":"89","endLine":11,"endColumn":26},{"ruleId":"75","severity":1,"message":"82","line":11,"column":11,"nodeType":"77","messageId":"78","endLine":11,"endColumn":21},{"ruleId":"75","severity":1,"message":"90","line":17,"column":12,"nodeType":"77","messageId":"78","endLine":17,"endColumn":30},{"ruleId":"75","severity":1,"message":"79","line":56,"column":10,"nodeType":"77","messageId":"78","endLine":56,"endColumn":22},{"ruleId":"75","severity":1,"message":"91","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":10},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'TabComponent' is defined but never used.","'App' is defined but never used.","'useState' is defined but never used.","'checkPhone' is defined but never used.","'r' is assigned a value but never used.","'axios' is defined but never used.","'base' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'check_tittle_index' is defined but never used.","'Qs' is defined but never used.","no-global-assign","no-unsafe-negation"]